CREATE TABLE CUSTOMER
(
	CustID VARCHAR(40) NOT NULL,
	[Name] VARCHAR(40),
	Contact BIGINT CHECK ((REPLACE(REPLACE(Contact, ' ', ''), '-', '') NOT LIKE '%[^0-9]%') AND LEN(REPLACE(REPLACE(Contact, ' ', ''), '-', ''))=10),
	Email VARCHAR(40) CHECK (dbo.ChkValidEmail(Email)=1),
	isActive BIT CHECK (isActive IN (0,1)),
	DateOfBirth DATE CHECK (DateOfBirth<GETDATE()),
	Age AS (CONVERT(INT,CONVERT(CHAR(8),GETDATE(),112))-CONVERT(CHAR(8),DateOfBirth,112))/10000,
	SSN INT,
	[State] VARCHAR(30),
	City VARCHAR(30),
	[Address] VARCHAR(50),
	ZipCode VARCHAR(10),
	CONSTRAINT CUST_PK PRIMARY KEY (CustID)
)

CREATE TABLE ACCOUNT
(
	AccountID VARCHAR(40) NOT NULL,
	CustID VARCHAR(40),
	Account_Type VARCHAR(20),
	[Start_Date] DATE CHECK (Start_Date < GETDATE()),
	No_of_Consumers INT CHECK(No_of_Consumers>0),
	IsActive BIT,
	IsSubsidized BIT,
	CONSTRAINT ACC_PK PRIMARY KEY (AccountID),
	CONSTRAINT CUST_FK1 FOREIGN KEY (CustID) REFERENCES Customer(CustID)
)

CREATE TABLE EQUIPMENT_LOCATION
(
	Latitude DECIMAL(8,6) NOT NULL,
	Longitude DECIMAL(9,6) NOT NULL,
	[State] NVARCHAR(75),
	City NVARCHAR(75),
	[Address] NVARCHAR(150),
	Zipcode CHAR(10),
	CONSTRAINT EQUIP_LOC_PK PRIMARY KEY (latitude,longitude)
)

CREATE TABLE EQUIPMENT_LIST
(
	EquipmentID VARCHAR(40) NOT NULL,
	Equipment_Name NVARCHAR(75),
	Equipment_Type NVARCHAR(50),
	Equipment_Category NVARCHAR(50) CHECK (equipment_category IN ('UG','OG','OH')),
	Latitude DECIMAL(8,6),
	Longitude DECIMAL(9,6),
	CONSTRAINT EQUIPLIST_PK PRIMARY KEY (EquipmentID),
	CONSTRAINT EQUIPLOC_FK1  FOREIGN KEY (latitude,longitude) REFERENCES EQUIPMENT_LOCATION(Latitude,Longitude)	
)

CREATE TABLE ACCOUNT_EQUIPMENT
(
	AccountID VARCHAR(40),
	EquipmentID VARCHAR(40),
	Installation_Price DECIMAL(10,2),
	CONSTRAINT ACCEQ_PK PRIMARY KEY (AccountID, EquipmentID),
	CONSTRAINT ACC_FK1 FOREIGN KEY (AccountID) REFERENCES ACCOUNT(AccountID),
	CONSTRAINT EQLIST_FK1 FOREIGN KEY (EquipmentID) REFERENCES EQUIPMENT_LIST(EquipmentID),	
)

CREATE TABLE CREW
(
	CrewID VARCHAR(40) NOT NULL,
	[Name] VARCHAR(40),
	ContactNo BIGINT,
	Date_Of_Joining DATE,
	isAvail BIT,
	YearsOfExperience AS (CONVERT(INT,CONVERT(CHAR(8),GETDATE(),112))-CONVERT(CHAR(8),Date_Of_Joining,112))/10000,
	[Address] VARCHAR(100),
	[State] VARCHAR(50),
	City VARCHAR(50),
	Zipcode VARCHAR(10),
	CONSTRAINT CREW_PK PRIMARY KEY (CrewID)
)

CREATE TABLE WEATHER_EVENTS
(
	EventID VARCHAR(40) ,
	Latitude DECIMAL(8,6),
	Longitude DECIMAL(9,6),
	Start_DateTime DATETIME,
	End_DateTime DATETIME,
	Event_Duration AS DATEDIFF(MINUTE,Start_DateTime,End_DateTime),
	Event_Category VARCHAR(40),
	CONSTRAINT WEVENTS_PK PRIMARY KEY (EventID)
)

CREATE TABLE OUTAGES
(
	OutageID VARCHAR(20) ,
	EquipmentID VARCHAR(40),
	EventID VARCHAR(40),
	Start_Time DATETIME,
	End_Time DATETIME,
	[Priority] INT,
	Outage_Type VARCHAR(40) CHECK (Outage_Type IN ('Planned','Unplanned')),
	Outage_ttr AS dbo.getOutageTTR(OutageID),
	isAssigned AS (CASE WHEN dbo.getOutageTTR(OutageID) IS NULL THEN 0 ELSE 1 END),
	[Status] AS (CASE WHEN End_Time is NOT NULL THEN 'Completed' ELSE 'In Progress' END),
	Outage_Duration AS DATEDIFF(MINUTE,Start_Time,End_Time),
	ZipCode VARCHAR(10),
	CONSTRAINT OUT_PK PRIMARY KEY (OutageID),
	CONSTRAINT WEVENT_FK1 FOREIGN KEY (EventID) REFERENCES WEATHER_EVENTS(EventID),
	CONSTRAINT EQLIST_FK2 FOREIGN KEY (EquipmentID) REFERENCES EQUIPMENT_LIST(EquipmentID)
)


CREATE TABLE CUSTOMER_COMPLAINTS
(
	ComplaintID VARCHAR(40) NOT NULL,
	CustID VARCHAR(40),
	Comments VARCHAR(200),
	Complaint_Type VARCHAR(100) CHECK (Complaint_Type IN ('Outage','Equipment Down','Feedback')),
	OutageID VARCHAR(20),
	CONSTRAINT CUSTCOMP_PK PRIMARY KEY (ComplaintID),
	CONSTRAINT CUST_FK2 FOREIGN KEY (CustID) REFERENCES CUSTOMER(CustID),
	CONSTRAINT OUT_FK1 FOREIGN KEY (OutageID) REFERENCES OUTAGES(OutageID)
)


CREATE TABLE CREW_ASSIGNMENTS
(
	CrewID VARCHAR(40) NOT NULL,
	OutageID VARCHAR(20) NOT NULL,
	AssignedDateTime DATETIME,
	CONSTRAINT CRASSIGN_PK PRIMARY KEY (CrewID, OutageID),
	CONSTRAINT CREW_FK1 FOREIGN KEY (CrewID) REFERENCES CREW(CrewID),
	CONSTRAINT OUT_FK2 FOREIGN KEY (OutageID) REFERENCES OUTAGES (OutageID)	
)

CREATE TABLE EQUIPMENT_INSTALLATION
(
	Installation_datetime DATETIME NOT NULL,
	EquipmentID VARCHAR(40),
	Installed_by_crew VARCHAR(40),
	Next_maintanence_date datetime,
	CONSTRAINT EQUIPINST_PK PRIMARY KEY (Installation_datetime,EquipmentID),
	CONSTRAINT EQUIPLIST_FK2 FOREIGN KEY (EquipmentID) REFERENCES EQUIPMENT_LIST(EquipmentID),
	CONSTRAINT CREW_FK2 FOREIGN KEY (Installed_by_crew) REFERENCES CREW(CrewID)
)

CREATE TABLE EQUIPMENT_REPAIRS
(
	EquipmentID VARCHAR(40),
	[Eventid] VARCHAR(40),
	[Status] NVARCHAR(100) CHECK (Status IN ('Completed','In Progress','Not Started')),
	Repair_Datetime DATETIME,
	CONSTRAINT EQREP_PK PRIMARY KEY (EquipmentID,EventID),
	CONSTRAINT EQLIST_FK3 FOREIGN KEY (EquipmentID) REFERENCES EQUIPMENT_LIST(EquipmentID),
	CONSTRAINT WEVENT_FK2 FOREIGN KEY (Eventid) REFERENCES WEATHER_EVENTS(Eventid),	
)

CREATE TABLE METER_READING
(
	MeterID VARCHAR(25) NOT NULL,
	AccountID VARCHAR(40),
	Consumption_Units INT,
	From_Date DATE,
	To_Date DATE,
	Meter_Status VARCHAR(25),
	Meter_Reading_DateTime DATETIME,
	CONSTRAINT MREAD_PK PRIMARY KEY (MeterID),
	CONSTRAINT ACC_FK2 FOREIGN KEY (AccountID) REFERENCES ACCOUNT (AccountID)
)

CREATE TABLE BILL
(
	BillID VARCHAR(25) NOT NULL,
	MeterID VARCHAR(25),
	PaymentID VARCHAR(25),
	Bill_Date DATE,
	Bill_Type VARCHAR(25),
	Due_Date DATE,
	Bill_Amount AS dbo.GetBillAmount(MeterID), 
	CONSTRAINT BILL_PK PRIMARY KEY (BillID),
	CONSTRAINT MREAD_FK1 FOREIGN KEY (MeterID) REFERENCES METER_READING (MeterID)
)

CREATE TABLE PAYMENT
(
	PaymentID VARCHAR(25) NOT NULL,
	Payment_Mode VARCHAR(25),
	Payment_Date DATE,
	Payment_Status VARCHAR(25),
	CardNumber BIGINT, 
	CONSTRAINT PaymentID_PK PRIMARY KEY (PaymentID)
)
	
-- Creating Indexes on commonly searched by columns in tables

CREATE NONCLUSTERED INDEX CustName ON CUSTOMER (Name); 
CREATE NONCLUSTERED INDEX OutageZipcode ON OUTAGES (zipcode); 
CREATE NONCLUSTERED INDEX WeatherEventCat ON WEATHER_EVENTS (Event_Category);
CREATE NONCLUSTERED INDEX BillMeterID ON BILL (MeterID);
